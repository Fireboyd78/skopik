test_empty
test_empty_array  = []
test_empty_scope  = {}

test_null   = null

test_bool   = [ true, false ]

test_int    = [ 32, -32, 0x12345, -0x12345 ]
test_uint   = [ 64u, 0xFFu ]
test_long   = [ 128L, -128L, 0xABCL, -0xABCL ]
test_ulong  = [ 128uL, 0xDEFuL ]
test_binary = [ 0110b, -0110b ]

test_double = [ 123.456, -123.456 ]
test_float  = [ 50.25f, -50.25f ]

test_string = "hello world"

test_inline = { test = "string index 0 = test"; inline = "string index 1 = inline"; }

// test comment
"Test array" : /* inline comment block that shouldn't affect control flow */ [
    { description = "this is a totally anonymous scope, with no name whatsoever." }, // end of line comment
    
    [3]: "skipping a couple indices",
    [0x04]: "defining #4 as explicit hexadecimal!",
    
    "this should be #5",

    6,
]/*
*
* Multi-line comment that shouldn't affect control flow
*
*/"Test scope" : {
    description = "this is a test scope"
    test_array = [
        "hello world!" : [ 
            "you're now entering a \"deeply\" nested array..." : [
                [ "enjoy the ride ;)" ],
            ],
        ],
    ]
}
// Oh look, tuples!
"Test tuple": (
    "Hi, I'm a tuple!",
    "I'm just like an array, except every value is guaranteed to be the same type.",
    "Every type is supported EXCEPT for tuples, because that would be ridiculous!",
    "When a value of a different type is encountered, I'll throw an exception to let you know.",
    /*
    1, // this is how you break tuples ;)
    */
    "It's been a pleasure meeting you -- goodbye for now!",
)